%h3
  &raquo;SF
  = link_to 'all', '#', :class => 'all'
  = @time.strftime('%I:%M %p')

%table#to_sfo{:border => 1, :cellspacing => 0}
  %tbody
    - @stations.each do |station|
      - trains = station.trains.select{|train|@destinations.include?(train.destination)}
      %tr{ :class => station_class(station) }
        %th= station.origin
        - trains.sort_by(&:minutes).first(6).each do |train|
          %td{:class => train_class(train),
            'data-origin' => station.origin,
            'data-destination' => train.destination.downcase,
            'data-minutes' => train.minutes,
            'data-length' => train.length}
            %span.minute= train.minutes
            %br
            %span.destination
              = train.destination[0,2]
              = train_length(train)
        - (6 - trains.length).times do
          %td.empty .

- if @is_evening
  %h3
    &raquo;Dublin
  %table#to_dub{:border => 1, :cellspacing => 0}
    %tbody
      - @stations.each do |station|
        - trains = station.trains.select{|train|train.destination == 'DUBL'}
        %tr{ :class => station_class(station) }
          %th= station.origin
          - trains.sort_by(&:minutes).each do |train|
            - if true # debug
              - train.minutes += 10
            %td{:class => opacity_class(train), 'data-destination' => train.destination.downcase, 'data-minutes' => train.minutes, 'data-length' => train.length}
              %span.minute= train.minutes
              %br
              %span.destination
                = train_length(train)
          - (6 - trains.length).times do
            %td.empty .

= link_to 'morning', { :morning => 'true' }
= link_to 'evening', { :evening => 'true' }

- content_for :page_styles do
  :plain
    th {
      text-align: right;
    }
    td {
      text-align: center;
      width: 32px;
    }
    td .destination {
      font-size: 10px;
    }
    td.dest_mlbr {
      background-color: #aaeeaa;
    }
    td.dest_daly {
      background-color: #aaaaee;
    }
    td.dest_sfia {
      background-color: #eeeeaa;
    }
    td.dest_24th {
      background-color: #eeaaee;
    }
    table#to_sfo td.highlighted {
      background-color: #ff0;
    }
    table#to_dub td.highlighted {
      background-color: #f80;
    }
    td.future, td.empty {
      opacity: 0.2;
    }
    tr.hidden {
      display: none;
    }

- content_for :page_javascripts do
  :plain
    var adjustments = #{@adjustments.to_json};
    $(function($){
      var toDub = $('table#to_dub tr:first-child td:not(.empty)');
      $('.all').click(function(){
        $('.hidden').show();
        return false;
      });
      var trainData = function($$){
        return {
          origin: $$.data('origin'),
          destination: $$.data('destination'),
          minutes: $$.data('minutes'),
          length: $$.data('length'),
        };
      };
      $('td').not('.empty').click(function(){
        var $$ = $(this);
        var train = trainData($$);
        $('.highlighted').removeClass('highlighted');
        $$.addClass('highlighted');
        var adjust = adjustments[train.origin.toLowerCase()];
        var minutes = train.minutes + adjust;
        var dest = ['[data-destination=', train.destination, ']'].join('');
        var leng = ['[data-length=',      train.length,      ']'].join('');
        var orig = ['not([data-origin=',  train.origin,      '])'].join('');
        var allTrains = $('td:' + dest + leng + orig);
        $.each(allTrains, function(i, td){
          var $$ = $(td);
          var data = trainData($$);
          var adjust = adjustments[data.origin.toLowerCase()];
          var diff = Math.abs(minutes - data.minutes - adjust);
          if (diff < 2) {
            minutes = Math.min(minutes, data.minutes + adjust);
            $$.addClass('highlighted');
          }
        });
        $.each(toDub, function(i, td){
          var $$ = $(td);
          if ($$.data('minutes') > minutes) {
            $$.addClass('highlighted');
          }
        });
      });
    });
